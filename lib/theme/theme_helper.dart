import 'package:flutter/material.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  final Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  final Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray5001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.blueGray100,
            width: 1,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
      ),
      dividerTheme: DividerThemeData(
        thickness: 5,
        space: 5,
        color: appTheme.blueGray200,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 16,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray500,
          fontSize: 14,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 11,
          fontFamily: 'SF Pro Text',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 30,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 24,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 12,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray600,
          fontSize: 22,
          fontFamily: 'SF Pro',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 18,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray80001,
          fontSize: 14,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static const primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF7C3AED),
    secondaryContainer: Color(0XFFDC2626),

    // On colors(text colors)
    onPrimary: Color(0X7AFFFFFF),
    onPrimaryContainer: Color(0XFF333333),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => const Color(0XFFFACC15);
  Color get amber600 => const Color(0XFFEAB308);
  Color get amber700 => const Color(0XFFF59E0B);

  // Black
  Color get black900 => const Color(0XFF000000);

  // Blue
  Color get blue300 => const Color(0XFF60A5FA);
  Color get blue30001 => const Color(0XFF55ACEE);
  Color get blue700 => const Color(0XFF3B88C4);
  Color get blueA200 => const Color(0XFF4285F4);

  // BlueGray
  Color get blueGray100 => const Color(0XFFD1D5DB);
  Color get blueGray10001 => const Color(0XFFD7D7D7);
  Color get blueGray10002 => const Color(0XFFD9D9D9);
  Color get blueGray200 => const Color(0XFFB8BFC8);
  Color get blueGray300 => const Color(0XFF9CA3AF);
  Color get blueGray30001 => const Color(0XFF94A3B7);
  Color get blueGray500 => const Color(0XFF64748A);
  Color get blueGray700 => const Color(0XFF475568);
  Color get blueGray800 => const Color(0XFF374151);
  Color get blueGray80001 => const Color(0XFF334154);

  // Cyan
  Color get cyan400 => const Color(0XFF22D3EE);
  Color get cyan50 => const Color(0XFFCFFAFE);
  Color get cyan700 => const Color(0XFF0891B2);

  // DeepPurple
  Color get deepPurple50 => const Color(0XFFEDE9FE);
  Color get deepPurpleA100 => const Color(0XFFA78BFA);
  Color get deepPurpleA200 => const Color(0XFFA855F7);
  Color get deepPurpleA20001 => const Color(0XFF7C3BE7);
  Color get deepPurpleA20002 => const Color(0XFF9747FF);
  Color get deepPurpleA20003 => const Color(0XFF8B5CF6);
  Color get deepPurpleA700 => const Color(0XFF5F01D1);

  // Gray
  Color get gray100 => const Color(0XFFF3F4F6);
  Color get gray10001 => const Color(0XFFF1F5F9);
  Color get gray10002 => const Color(0XFFF0FDF4);
  Color get gray10003 => const Color(0XFFF5F5F5);
  Color get gray200 => const Color(0XFFE5E7EB);
  Color get gray20001 => const Color(0XFFE7E6E8);
  Color get gray300 => const Color(0XFFE5E5EA);
  Color get gray400 => const Color(0XFFC9C9C9);
  Color get gray50 => const Color(0XFFF5F3FF);
  Color get gray500 => const Color(0XFF98979A);
  Color get gray50001 => const Color(0XFFA6A6A6);
  Color get gray50002 => const Color(0XFF999999);
  Color get gray5001 => const Color(0XFFF8FAFC);
  Color get gray5002 => const Color(0XFFF9FAFB);
  Color get gray600 => const Color(0XFF707070);
  Color get gray60001 => const Color(0XFF6B7280);
  Color get gray800 => const Color(0XFF3D3D3D);
  Color get gray900 => const Color(0XFF111826);

  // Grayf
  Color get gray4003f => const Color(0X3FAFAFAF);

  // Grayc
  Color get gray6004c => const Color(0X4C7F7F7F);

  // Green
  Color get green700 => const Color(0XFF16A34A);
  Color get greenA700 => const Color(0XFF25D366);
  Color get greenA70001 => const Color(0XFF22C55E);

  // Indigo
  Color get indigo50 => const Color(0XFFE2E8F0);
  Color get indigoA100 => const Color(0XFF818CF8);
  Color get indigoA200 => const Color(0XFF6366F1);

  // LightBlue
  Color get lightBlue50 => const Color(0XFFECFEFF);
  Color get lightBlue800 => const Color(0XFF0072C6);

  // LightGreen
  Color get lightGreen700 => const Color(0XFF65A30D);

  // Lime
  Color get lime100 => const Color(0XFFECFCCB);

  // Orange
  Color get orange50 => const Color(0XFFFFEDD5);
  Color get orange800 => const Color(0XFFD97706);

  // Pink
  Color get pink300 => const Color(0XFFFB7185);
  Color get pinkA100 => const Color(0XFFF472B6);

  // Purple
  Color get purple50 => const Color(0XFFF3E8FF);
  Color get purpleA100 => const Color(0XFFE879F9);

  // Red
  Color get red300 => const Color(0XFFF87171);
  Color get red400 => const Color(0XFFF43F5E);
  Color get red50 => const Color(0XFFFEF2F2);
  Color get red500 => const Color(0XFFEF4444);

  // Teal
  Color get tealA400 => const Color(0XFF2DD4BF);

  // Yellow
  Color get yellow700 => const Color(0XFFFBBF24);
  Color get yellow900 => const Color(0XFFF97316);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
